version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.10
    steps:
      - checkout
      - run:
          name: Build Dependencies
          command: |
            sudo python3 -m pip install -r requirements.txt
            sudo pip install flake8 nose pytest | cat; test ${PIPESTATUS[0]} -eq 0
            sudo python setup.py build_ext --inplace
            mkdir test-reports | cat
      - run:
          name: Flake8
          command: |
            flake8 . --statistics --exit-zero
      - run:
          name: Run API Tests
          command: |
            cd ./galaxy_ml
            nosetests ./tests -sv
      - store_test_results:
          path: test-reports
  tool_lint:
    docker:
      - image: circleci/python:3.7.10
    steps:
      - checkout
      - run:
          name: Tool Linter
          command: |
            cd ~
            python3 -m venv venv
            . venv/bin/activate
            pip install planemo
            cd project/galaxy_ml/tools
            planemo lint
  tool_test:
    docker:
      - image: circleci/python:3.7.10
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Build Environment
          command: |
            cd ~
            python3 -m venv venv
            . venv/bin/activate
            pip install planemo
            if [[ ! -d ~/miniconda ]]; then
                wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh &&
                bash miniconda.sh -b -f -p ~/miniconda;
            else
                echo "Using cached miniconda";
            fi
      - run:
          name: Tool Tests
          command: |
            . ~/venv/bin/activate
            cd galaxy_ml/tools
            TESTFILES=$(ls -I "*macros.xml" | grep .xml | circleci tests split)
            planemo test ${TESTFILES} --galaxy_branch dev
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - tool_lint
      - tool_test
